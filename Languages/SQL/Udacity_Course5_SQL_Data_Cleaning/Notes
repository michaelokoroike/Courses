Video 1: Introduction to Data Cleaning
- We will learn to clean and reorgainizing messy data
- We will learn how to change a column's data type
- We will learn some tricks on how to manipulate NULLs

Video 2: LEFT & RIGHT
- Example: SELECT first_name,
                  last_name,
                  phone_number,
                  LEFT(phone_number, 3) AS area_code              #LEFT pulls a specified number of characters for each row in a specified column starting at the beginning (or from the left)
                  RIGHT(phone_number, 8) AS phone_number_only     #RIGHT pulls a specified number of characters for each row in a specified column starting at the end (or from the right)
                  RIGHT(phone_number, LENGTH(phone_number) - 4) AS phone_number_alt #LENGTH provides the number of characters for each row of a specified column
           FROM customer_data

Video 3: POSITION, STRPOS, & SUBSTR
- Example: SELECT first_name,
                  last_name,
                  city_state,
                  POSITION(',' IN city_state) AS comma_position               #POSITION takes a character and a column, and provides the index where that character is for each row
                  STRPOS(city_state, ',') AS substr_comma_position            #STRPOS provides the same result as POSITION, but the syntax for achieving those results is a bit different as shown here: STRPOS(city_state, ',')
                  LOWER(city_state)                                           #LOWER makes every string in a character to become lowercase 
                  UPPER(city_state)                                           #UPPER makes every string in a character to become uppercase 
                  LEFT(city_state, POSITION(',' IN city_state) - 1)  AS city  #Everything in the city_state value up to and including a character before the comma (which is the city)
           FROM customer_data
- Note: POSITION and STRPOS are case-sensitive

Video 4: CONCAT
- Example: SELECT first_name,
                  last_name,
                  CONCAT(first_name, ' ', last_name) AS full_name
                  first_name || ' ' || last_name, AS full_name_alt

Video 5: CAST
- Most data analyzed will have dates attached to it...but we won't get good value from them if the dates aren't formatted correctly
- Example: If dates were in 3 columns (like month being one/in words, day being another, and year being another), you'd have to make the month a number and then concatenate all the fields with hyphens
- Example (cont): SELECT *, #gives a month (in name form), day, and year in separate columns
                         DATE_PART('month', TO_DATE(month, 'month')) AS clean_month, #make the month number format
                         year || '-' || DATE_PART('month', TO_DATE(month, 'month')) || '-' || day AS concatenated_date, #get the date in the proper year-month-day format
                         CAST(year || '-' || DATE_PART('month', TO_DATE(month, 'month')) || '-' || day AS date) AS formatted_date, #completely convert it to a date format, so it's passable as such
                         (year || '-' || DATE_PART('month', TO_DATE(month, 'month')) || '-' || day)::date AS concatenated_date, #the two colons is essentially the shorthand version of CAST
                  FROm demo.ad_clicks
- CAST allows us to change columns from one data type to another; most especially for turning strings into numbers or dates
- Note: || is the same as to concatenate; ()::'new_data_type' is the same as CAST()
- Note: LEFT, RIGHT, or SUBSTR automatically casts data to string data type while performing the operation

Video 6: COALESCE
- Sometimes we'll have NULLs in a dataset which we'd like to contain actual values
- COALESCE returns the first non-NULL value passed for each row
- Example: Where there's no primary point of contact, we may want to label that
- Example (cont.): SELECT *,
                          COALESCE(primary_poc, 'no POC') AS primary_poc_modified #will display nulls as 'no POC'
                   FROM accounts
                   WHERE primary_poc IS NULL

Video 7: Recap
- Learned how to clean data...SQL does it really well at scale
